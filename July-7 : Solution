1353. Maximum Number of Events That Can Be Attended
Solution:
import heapq

class Solution:
    def maxEvents(self, events: List[List[int]]) -> int:
        events.sort()  # sort by start day
        min_heap = []
        day = i = res = 0
        n = len(events)

        while i < n or min_heap:
            if not min_heap:
                day = events[i][0]

            while i < n and events[i][0] <= day:
                heapq.heappush(min_heap, events[i][1])  # push end day
                i += 1

            while min_heap and min_heap[0] < day:
                heapq.heappop(min_heap)  # remove past events

            if min_heap:
                heapq.heappop(min_heap)  # attend one event today
                res += 1
                day += 1
            else:
                if i < n:
                    day = events[i][0]

        return res
